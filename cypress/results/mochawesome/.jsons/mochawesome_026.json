{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-06T21:41:12.462Z",
    "end": "2025-05-06T21:41:51.501Z",
    "duration": 39039,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7fc430e0-6a09-4ac8-bd63-7398df23162b",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\systemUsers.feature",
      "file": "cypress\\e2e\\features\\systemUsers.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
          "title": "Gestion des utilisateurs système",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Vérification de l'authentification",
              "fullTitle": "Gestion des utilisateurs système Vérification de l'authentification",
              "timedOut": null,
              "duration": 5632,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "71a467fe-5045-4640-a1d8-2241288c5144",
              "parentUUID": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Vérification page Admin",
              "fullTitle": "Gestion des utilisateurs système Vérification page Admin",
              "timedOut": null,
              "duration": 5330,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "924710e2-6164-4467-8b1a-5f4ef15c28e4",
              "parentUUID": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ajout d'un utilisateur",
              "fullTitle": "Gestion des utilisateurs système Ajout d'un utilisateur",
              "timedOut": null,
              "duration": 11700,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "53a7eded-ebc1-401a-ba01-27576b97a3b3",
              "parentUUID": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Recherche de l'utilisateur créé",
              "fullTitle": "Gestion des utilisateurs système Recherche de l'utilisateur créé",
              "timedOut": null,
              "duration": 5224,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "65221404-cd30-4900-b676-414190514d14",
              "parentUUID": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Modification de l'utilisateur créé",
              "fullTitle": "Gestion des utilisateurs système Modification de l'utilisateur créé",
              "timedOut": null,
              "duration": 4896,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 12 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click",
                "estack": "CypressError: `cy.click()` can only be called on a single element. Your subject contained 12 elements. Pass `{ multiple: true }` if you want to serially click each element.\n\nhttps://on.cypress.io/click\n    at mouseAction (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:112650:68)\n    at Context.click (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:112817:14)\n    at wrapped (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:140173:19)\nFrom Your Spec Code:\n    at Object.proxyGetter [as get] (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:78967:22)\n    at exists (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:145028:26)\n    at elExists (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:145043:10)\n    at ensureExistence (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:145224:22)\n    at onFailFn (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:145253:53)",
                "diff": null
              },
              "uuid": "ce201bf2-af91-4185-8b6d-5c06a7978546",
              "parentUUID": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suppression de l'utilisateur modifié",
              "fullTitle": "Gestion des utilisateurs système Suppression de l'utilisateur modifié",
              "timedOut": null,
              "duration": 5636,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "137f1eb1-53bd-4033-bff7-16342261f20d",
              "parentUUID": "a57b3e9e-5989-4417-b5e5-f1f45afb730c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71a467fe-5045-4640-a1d8-2241288c5144",
            "924710e2-6164-4467-8b1a-5f4ef15c28e4",
            "53a7eded-ebc1-401a-ba01-27576b97a3b3",
            "65221404-cd30-4900-b676-414190514d14",
            "137f1eb1-53bd-4033-bff7-16342261f20d"
          ],
          "failures": [
            "ce201bf2-af91-4185-8b6d-5c06a7978546"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\results\\mochawesome\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}